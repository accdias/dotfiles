# NOTE: to use this, rename this file to default.conf and put it in /etc/keyd/

# Mac-Like Configuration Example
#
# Uses the "Meta" key (sometimes called Windows/Super key) to the left of the spacebar as the "Cmd" key. On a mac this is the 'command' key.

[ids]
*

[main]

# Use the 'leftmeta' key as the new "Cmd" key, activating the 'meta_mac' layer
# leftmeta = layer(meta_mac)
leftmeta = overload(meta_mac, leftmeta)

# Optional: Ensure 'leftalt' retains its default behavior (usually not necessary)
# leftalt = leftalt

# The 'meta_mac' modifier layer; inherits from the 'Ctrl' modifier layer
[meta_mac:C]

# Meta-Space: Open the Launcher (a feature of gnome-shell)
# keybinding: ? how did we arrive at M-/ ?
# space = M-/

# Switch directly to an open tab (e.g., Firefox, VS Code)
1 = A-1
2 = A-2
3 = A-3
4 = A-4
5 = A-5
6 = A-6
7 = A-7
8 = A-8
9 = A-9

# Copy
c = C-insert
# Paste
v = S-insert
# Cut
x = S-delete

## MacOS Behavior - move cursor to beginning of line
left = home
## MacOS Behavior - move cursor to end of line
right = end

## Gnome Behavior - Toggle tiled left 
# left = M-left
## Gnome Behavior - Toggle tiled right 
# right = M-right

#  meta+up - Maximize window
up = M-up
# meta+down - un-maximize window
down = M-down

# As soon as 'tab' is pressed (but not yet released), switch to the 'app_switch_state' overlay
# Send a 'M-tab' key tap before entering 'app_switch_state'
tab = swapm(app_switch_state, M-tab)

# Meta-Backtick: Switch to the next window in the application group
# Default binding for 'cycle-group' in GNOME
` = A-f6

# 'app_switch_state' modifier layer; inherits from the 'Meta' modifier layer
[app_switch_state:M]

# Meta-Tab: Switch to the next application
tab = M-tab
right = M-tab
 
# Meta-Backtick: Switch to the previous application
` = M-S-tab
left = M-S-tab
